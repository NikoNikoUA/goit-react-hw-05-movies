{"version":3,"file":"static/js/910.18722149.chunk.js","mappings":"yNAsEA,UAlEa,WACX,OAAuBA,EAAAA,EAAAA,WAAS,GAAvBC,GAAT,eACA,GAAqBD,EAAAA,EAAAA,WAAS,GAArBE,GAAT,eACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QA8BR,OA1BAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBADT,wCAGd,oGAEIR,GAAW,GACXC,GAAS,GAHb,UAI8BQ,EAAAA,EAAAA,GAAUL,EAAS,CAC3CM,OAAQH,EAAWG,SALzB,OAIUC,EAJV,OAQIR,EAAQQ,EAAYT,MARxB,gDAUuB,iBAAf,KAAMU,MACRX,GAAS,GAXf,yBAcID,GAAW,GAdf,6EAHc,sBAqBd,OArBc,mCAoBda,GACO,WACLN,EAAWO,OACZ,CACF,GAAE,CAACV,KAGF,yBACGF,EAAKa,OAAS,GACb,wBACGb,EAAKc,KAAI,SAAAC,GACR,IAAQC,EAAkCD,EAAlCC,KAAMC,EAA4BF,EAA5BE,UAAWC,EAAiBH,EAAjBG,aACzB,OACE,2BACE,gBACEC,IACED,EAAY,UAvCP,mCAuCO,OACYA,GAtCxC,8EAyCcE,IAAKJ,EACLK,MAAM,KACNC,QAAQ,UAEV,0BAAI,SAAON,MACX,yBAAG,qBAAmBC,OAZff,EAeZ,OAGH,uBAAG,qDAIV,C,8LClEKqB,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,IAAKF,GAKA,IAAMG,EAAmB,mCAAG,yGAAOC,EAAP,+BAAgB,CAAC,EAAjB,SACVH,EAAAA,EAAAA,IAAA,sCACUD,GAC/BI,GAH+B,cAC3BC,EAD2B,yBAK1BA,EAASC,MALiB,2CAAH,qDAUnBC,EAAe,mCAAG,WAAO5B,GAAP,4FAAgByB,EAAhB,+BAAyB,CAAC,EAA1B,SACNH,EAAAA,EAAAA,IAAA,iBACXtB,EADW,oBACQqB,GAC7BI,GAH2B,cACvBC,EADuB,yBAKtBA,EAASC,MALa,2CAAH,sDAUfE,EAAkB,mCAAG,WAAOC,GAAP,4FAAcL,EAAd,+BAAuB,CAAC,EAAxB,SACTH,EAAAA,EAAAA,IAAA,8BACEQ,EADF,oBACmBT,GACxCI,GAH8B,cAC1BC,EAD0B,yBAKzBA,EAASC,MALgB,2CAAH,sDAUlBI,EAAW,mCAAG,WAAO/B,GAAP,4FAAgByB,EAAhB,+BAAyB,CAAC,EAA1B,SACFH,EAAAA,EAAAA,IAAA,iBACXtB,EADW,4BACgBqB,GACrCI,GAHuB,cACnBC,EADmB,yBAKlBA,EAASC,MALS,2CAAH,sDAUXtB,EAAS,mCAAG,WAAOL,GAAP,4FAAgByB,EAAhB,+BAAyB,CAAC,EAA1B,SACAH,EAAAA,EAAAA,IAAA,iBACXtB,EADW,4BACgBqB,GACrCI,GAHqB,cACjBC,EADiB,yBAKhBA,EAASC,MALO,2CAAH,qD","sources":["components/Cast.js","utils/Api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from '../utils/Api';\n\nconst Cast = () => {\n  const [, setLoading] = useState(false);\n  const [, setError] = useState(false);\n  const [cast, setCast] = useState([]);\n\n  const { movieId } = useParams();\n  const posterBasePath = 'https://image.tmdb.org/t/p/w500';\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  useEffect(() => {\n    const controller = new AbortController();\n\n    async function getReview() {\n      try {\n        setLoading(true);\n        setError(false);\n        const fetchedCast = await fetchCast(movieId, {\n          signal: controller.signal,\n        });\n\n        setCast(fetchedCast.cast);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(true);\n        }\n      } finally {\n        setLoading(false);\n      }\n    }\n    getReview();\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <div>\n      {cast.length > 0 ? (\n        <ul>\n          {cast.map(actor => {\n            const { name, character, profile_path } = actor;\n            return (\n              <li key={movieId}>\n                <img\n                  src={\n                    profile_path\n                      ? `${posterBasePath}${profile_path}`\n                      : defaultImg\n                  }\n                  alt={name}\n                  width=\"50\"\n                  loading=\"lazy\"\n                />\n                <h3>Name: {name}</h3>\n                <p>Character played: {character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>There is not information on cast for this movie</p>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '3dcf7f9df138daa52451d10b15111f4e';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  key: API_KEY,\n};\n\n// trending movies search for Home page\n\nexport const fetchTrandingMovies = async (params = {}) => {\n  const response = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// movie by ID\n\nexport const fetchMoviesById = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// movies for Movies page\n\nexport const fetchMoviesByQuery = async (value, params = {}) => {\n  const response = await axios.get(\n    `/search/movie?query=${value}&api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// fetch for review\n\nexport const fetchReview = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// fetch for cast\n\nexport const fetchCast = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n"],"names":["useState","setLoading","setError","cast","setCast","movieId","useParams","useEffect","controller","AbortController","fetchCast","signal","fetchedCast","code","getReview","abort","length","map","actor","name","character","profile_path","src","alt","width","loading","API_KEY","axios","key","fetchTrandingMovies","params","response","data","fetchMoviesById","fetchMoviesByQuery","value","fetchReview"],"sourceRoot":""}