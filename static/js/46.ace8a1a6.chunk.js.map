{"version":3,"file":"static/js/46.ace8a1a6.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","components/Form/Form.styled.js","components/Form/Form.js","pages/Movies.js","utils/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 15px;\n`;\n\nexport const Title = styled.p`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n\n  padding: 16px;\n  width: 100%;\n  box-sizing: border-box;\n\n  font-size: 20px;\n  color: white;\n  font-weight: 500;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  background-color: rgba(0, 0, 0, 0.4);\n\n  transition: all 250ms ease;\n`;\n\nexport const ListItem = styled.li`\n  position: relative;\n  border-radius: 4px;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.3);\n\n  object-fit: cover;\n  overflow: hidden;\n\n  transition: all 250ms ease;\n\n  &:hover,\n  &:focus {\n    box-shadow: 0px 6px 8px rgba(0, 0, 0, 0.6);\n    transform: scale(1.03);\n\n    & ${Title} {\n      bottom: -100%;\n    }\n  }\n`;\n\nexport const Img = styled.img`\n  @media screen and (max-width: 767px) {\n    width: 300px;\n  }\n`","import { Link, useLocation } from 'react-router-dom';\nimport { List, ListItem, Title, Img } from './MoviesList.styled';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\nconst posterBasePath = 'https://image.tmdb.org/t/p/w500';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <section>\n      <>\n        <List>\n          {movies.map(({ id, title, poster_path }) => (\n            <ListItem key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <Img\n                  src={\n                    poster_path ? `${posterBasePath}${poster_path}` : defaultImg\n                  }\n                  alt={title}\n                  width=\"200\"\n                  loading=\"lazy\"\n                />\n                <Title>{title}</Title>\n              </Link>\n            </ListItem>\n          ))}\n        </List>\n      </>\n    </section>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  border-top-left-radius: 4px;\n  border-bottom-left-radius: 4px;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  max-width: 600px;\n  overflow: hidden;\n  border: none;\n  height: 40px;\n  font-size: 20px;\n  outline: none;\n  padding: 5px 8px;\n  margin-bottom: 40px;\n\n  @media screen and (min-width: 600px) {\n    width: 400px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 600px;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  font-size: 22px;\n  font-weight: 500;\n  color: white;\n  gap: 10px;\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  align-items: flex-end;\n`;\n\nexport const SubmitBtn = styled.button`\n  border: none;\n  height: 50px;\n  width: 50px;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n  cursor: pointer;\n  margin-bottom: 40px;\n`;\n","import React, { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { HiMiniMagnifyingGlassCircle } from 'react-icons/hi2';\nimport {\n  Container,\n  Label,\n  SubmitBtn,\n  InputContainer,\n  Input,\n} from './Form.styled';\n\nconst Form = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    const inputValue = value.toLowerCase();\n    onSubmit(inputValue);\n    if (!inputValue.trim()) {\n      toast.error('Please enter something!');\n      return;\n    }\n  };\n\n  return (\n    <Container>\n      <form onSubmit={onFormSubmit}>\n        <InputContainer>\n          <Label>\n            Search by name\n            <Input\n              type=\"text\"\n              name=\"query\"\n              value={value}\n              autoFocus\n              onChange={event => setValue(event.target.value)}\n              placeholder=\"Enter movie name\"\n            />\n          </Label>\n          <SubmitBtn type=\"submit\">\n            <HiMiniMagnifyingGlassCircle\n              style={{\n                width: '35px',\n                height: '35px',\n                opacity: 0.5,\n              }}\n            />\n          </SubmitBtn>\n        </InputContainer>\n      </form>\n      <ToastContainer autoClose={4000} theme=\"colored\" />\n    </Container>\n  );\n};\n\nexport default Form;\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { fetchMoviesByQuery } from '../utils/Api';\nimport Form from '../components/Form/Form';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Loader from '../components/Loader/Loader';\n\nconst Movies = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isEmpty, setIsEmpty] = useState(false);\n  const [loadMore, setLoadMore] = useState(false);\n  const [page, setPage] = useState(1);\n  const [hover, setHover] = useState(false);\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const controller = new AbortController();\n    if (!query) {\n      return;\n    }\n    async function getMovies() {\n      try {\n        setLoading(true);\n        setError(false);\n        setIsEmpty(false);\n        const fetchedMovies = await fetchMoviesByQuery(query, page, {\n          signal: controller.signal,\n        });\n        setIsEmpty(() => {\n          if (fetchedMovies.results.length === 0) {\n            return true;\n          }\n        });\n\n        setMovies(prevState => [...prevState, ...fetchedMovies.results]);\n        setLoadMore(page < fetchedMovies.total_pages);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(true);\n        }\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMovies();\n    return () => {\n      controller.abort();\n    };\n  }, [query, page]);\n\n  const onSubmit = value => {\n    if (query === value) {\n      return toast.info('Please search something else');\n    }\n    setSearchParams(value !== '' ? { query: value } : {});\n    setPage(1);\n    setMovies([]);\n    setLoadMore(false);\n  };\n\n  const clickLoadMore = () => {\n    setPage(prevState => prevState + 1);\n    setLoadMore(true);\n  };\n\n  const buttonStyles = {\n    display: 'block',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    borderRadius: '4px',\n    backgroundColor: 'orange',\n    padding: '15px 20px',\n    color: 'black',\n    fontWeight: '500',\n    fontSize: '24px',\n    transition: 'all 250ms ease',\n    cursor: 'pointer',\n    marginTop: '20px',\n    border: 'none',\n  };\n\n  return (\n    <main>\n      {error &&\n        toast.error(`Whoops, something went wrong. Try reloading the page`)}\n      <Form onSubmit={onSubmit} />\n      {movies.length > 0 && <MoviesList movies={movies} />}\n      {isEmpty && <p style={{ fontSize: '30px' }}>No results</p>}\n      <ToastContainer autoClose={4000} theme=\"colored\" />\n      {loading && <Loader />}\n      {loadMore && (\n        <button\n          style={{\n            ...buttonStyles,\n            backgroundColor: hover ? 'transparent' : 'orange',\n            color: hover ? 'orange' : 'white',\n            border: hover ? '1px solid white' : 'none',\n          }}\n          onClick={clickLoadMore}\n          onMouseEnter={() => setHover(true)}\n          onMouseLeave={() => setHover(false)}\n        >\n          Load more\n        </button>\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '3dcf7f9df138daa52451d10b15111f4e';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  key: API_KEY,\n};\n\n// trending movies search for Home page\n\nexport const fetchTrandingMovies = async (page, params = {}) => {\n  const response = await axios.get(\n    `/trending/movie/day?page=${page}&api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// movie by ID\n\nexport const fetchMoviesById = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// movies for Movies page\n\nexport const fetchMoviesByQuery = async (value, page, params = {}) => {\n  const response = await axios.get(\n    `/search/movie?query=${value}&page=${page}&api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// fetch for review\n\nexport const fetchReview = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// fetch for cast\n\nexport const fetchCast = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n"],"names":["List","styled","Title","ListItem","Img","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","width","loading","Input","Container","Label","InputContainer","SubmitBtn","onSubmit","useState","value","setValue","event","preventDefault","inputValue","toLowerCase","trim","toast","type","name","autoFocus","onChange","target","placeholder","style","height","opacity","autoClose","theme","setLoading","error","setError","setMovies","useSearchParams","searchParams","setSearchParams","isEmpty","setIsEmpty","loadMore","setLoadMore","page","setPage","hover","setHover","query","get","useEffect","controller","AbortController","getMovies","abort","fetchMoviesByQuery","signal","fetchedMovies","results","length","prevState","total_pages","code","MoviesList","fontSize","Loader","display","marginLeft","marginRight","borderRadius","backgroundColor","padding","color","fontWeight","transition","cursor","marginTop","border","onClick","onMouseEnter","onMouseLeave","API_KEY","axios","key","fetchTrandingMovies","params","response","data","fetchMoviesById","movieId","fetchReview","fetchCast"],"sourceRoot":""}