{"version":3,"file":"static/js/266.191ca186.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","pages/Home.js","utils/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 15px;\n`;\n\nexport const Title = styled.p`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n\n  padding: 16px;\n  width: 100%;\n  box-sizing: border-box;\n\n  font-size: 20px;\n  color: white;\n  font-weight: 500;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  background-color: rgba(0, 0, 0, 0.4);\n\n  transition: all 250ms ease;\n`;\n\nexport const ListItem = styled.li`\n  position: relative;\n  border-radius: 4px;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.3);\n\n  object-fit: cover;\n  overflow: hidden;\n\n  transition: all 250ms ease;\n\n  &:hover,\n  &:focus {\n    box-shadow: 0px 6px 8px rgba(0, 0, 0, 0.6);\n    transform: scale(1.03);\n\n    & ${Title} {\n      bottom: -100%;\n    }\n  }\n`;\n\nexport const Img = styled.img`\n  @media screen and (max-width: 767px) {\n    width: 300px;\n  }\n`","import { Link, useLocation } from 'react-router-dom';\nimport { List, ListItem, Title, Img } from './MoviesList.styled';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\nconst posterBasePath = 'https://image.tmdb.org/t/p/w500';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <section>\n      <>\n        <List>\n          {movies.map(({ id, title, poster_path }) => (\n            <ListItem key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <Img\n                  src={\n                    poster_path ? `${posterBasePath}${poster_path}` : defaultImg\n                  }\n                  alt={title}\n                  width=\"200\"\n                  loading=\"lazy\"\n                />\n                <Title>{title}</Title>\n              </Link>\n            </ListItem>\n          ))}\n        </List>\n      </>\n    </section>\n  );\n};\n\nexport default MoviesList;\n","import { fetchTrandingMovies } from '../utils/Api';\nimport { useEffect, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport MoviesList from '../components/MoviesList/MoviesList';\nimport Loader from '../components/Loader/Loader';\n\nconst Home = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [loadMore, setLoadMore] = useState(false);\n  const [page, setPage] = useState(1);\n  const [hover, setHover] = useState(false);\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    async function getMoviesHome() {\n      try {\n        setLoading(true);\n        setError(false);\n        const fetchedMoviesHome = await fetchTrandingMovies(page, {\n          signal: controller.signal,\n        });\n\n        setMovies(prevState => [...prevState, ...fetchedMoviesHome.results]);\n        setLoadMore(page < fetchedMoviesHome.total_pages);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(true);\n        }\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMoviesHome();\n    return () => {\n      controller.abort();\n    };\n  }, [page]);\n\n  const clickLoadMore = () => {\n    setPage(prevState => prevState + 1);\n    setLoadMore(true);\n  };\n\n  const buttonStyles = {\n    display: 'block',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    borderRadius: '4px',\n    backgroundColor: 'orange',\n    padding: '15px 20px',\n    color: 'black',\n    fontWeight: '500',\n    fontSize: '24px',\n    transition: 'all 250ms ease',\n    cursor: 'pointer',\n    marginTop: '20px',\n    border: 'none',\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          maxWidth: '1600px',\n          marginTop: 0,\n          marginBottom: 0,\n          marginRight: 'auto',\n          marginLeft: 'auto',\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n      >\n        <h1\n          style={{\n            fontSize: '36px',\n            color: 'white',\n            textShadow: '1px 1px 1px black',\n            marginBottom: '20px',\n          }}\n        >\n          Trending movies\n        </h1>\n      </div>\n      {loading && <Loader />}\n\n      {error &&\n        toast.error(`Whoops, something went wrong. Try reloading the page`)}\n      <MoviesList movies={movies} />\n      <ToastContainer autoClose={4000} theme=\"colored\" />\n      {loadMore && (\n        <button\n          style={{\n            ...buttonStyles,\n            backgroundColor: hover ? 'transparent' : 'orange',\n            color: hover ? 'orange' : 'white',\n            border: hover ? '1px solid white' : 'none',\n          }}\n          onClick={clickLoadMore}\n          onMouseEnter={() => setHover(true)}\n          onMouseLeave={() => setHover(false)}\n        >\n          Load more\n        </button>\n      )}\n    </>\n  );\n};\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '3dcf7f9df138daa52451d10b15111f4e';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  key: API_KEY,\n};\n\n// trending movies search for Home page\n\nexport const fetchTrandingMovies = async (page, params = {}) => {\n  const response = await axios.get(\n    `/trending/movie/day?page=${page}&api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// movie by ID\n\nexport const fetchMoviesById = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// movies for Movies page\n\nexport const fetchMoviesByQuery = async (value, page, params = {}) => {\n  const response = await axios.get(\n    `/search/movie?query=${value}&page=${page}&api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// fetch for review\n\nexport const fetchReview = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// fetch for cast\n\nexport const fetchCast = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n"],"names":["List","styled","Title","ListItem","Img","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","width","loading","useState","setLoading","error","setError","setMovies","loadMore","setLoadMore","page","setPage","hover","setHover","useEffect","controller","AbortController","fetchTrandingMovies","signal","fetchedMoviesHome","prevState","results","total_pages","code","getMoviesHome","abort","style","maxWidth","marginTop","marginBottom","marginRight","marginLeft","display","justifyContent","fontSize","color","textShadow","toast","autoClose","theme","borderRadius","backgroundColor","padding","fontWeight","transition","cursor","border","onClick","onMouseEnter","onMouseLeave","API_KEY","axios","key","params","response","data","fetchMoviesById","movieId","fetchMoviesByQuery","value","fetchReview","fetchCast"],"sourceRoot":""}